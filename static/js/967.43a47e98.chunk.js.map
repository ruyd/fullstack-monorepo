{"version":3,"file":"static/js/967.43a47e98.chunk.js","mappings":"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","sources":["../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../lib/src/types/drawing.ts","../../lib/src/types/order.ts","shared/config.ts","features/canvas/helpers.ts","features/canvas/worker.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import { Entity } from '.'\nimport { User } from './user'\n\nexport enum ActionType {\n  Open = 0,\n  Close = 1,\n  Stroke = 2,\n}\n\n/**\n * Reducing space as much as possible\n *\n * c: color\n * w: width/size\n * ts: unix timestamp\n */\n// better space would be, mini serializer needed\n// JSON.stringify([...Object.values({ x, y, t, w, st, ts })])\nexport interface DrawAction {\n  t: ActionType\n  x?: number\n  y?: number\n  c?: string\n  w?: number\n  ts?: number\n}\n\nexport interface Drawing extends Entity {\n  drawingId?: string\n  userId?: string\n  name: string\n  history: DrawAction[]\n  thumbnail?: string\n  private?: boolean\n  sell?: boolean\n  price?: number\n  hits?: number\n  user?: User\n}\n\n// might be better to add up all open closes hmm\nexport function getTimeSpent(d: Drawing): number {\n  if (!d?.history || d.history?.length < 2) {\n    return 0\n  }\n  const first = d.history[0].ts as number\n  const last = d.history[d.history.length - 1].ts as number\n  const millisecs = last - first\n  return millisecs\n}\n\nexport function getDuration(d: Drawing) {\n  const secs = Math.round(getTimeSpent(d) / 1000)\n  const mins = Math.round(secs / 60)\n  const hours = Math.round(mins / 60)\n  const rem = secs % 60\n  return `${hours}h:${mins}m:${rem}s`\n}\n","import { Entity } from '.'\nimport { User } from './user'\nimport { Drawing } from './drawing'\n\nexport enum OrderStatus {\n  Pending = 'pending',\n  Paid = 'paid',\n  Shipped = 'shipped',\n  Delivered = 'delivered',\n  Cancelled = 'cancelled',\n}\n\nexport interface OrderItem extends Entity {\n  orderItemId?: string\n  orderId?: string\n  drawingId?: string\n  price?: number\n  quantity?: number\n  drawing?: Drawing\n}\n\nexport interface Order extends Entity {\n  orderId?: string\n  userId?: string\n  billingAddressId?: string\n  shippingAddressId?: string\n  paymentMethodId?: string\n  total?: number\n  status?: OrderStatus\n  OrderItems?: OrderItem[]\n  user?: User\n}\n\nexport interface Payment extends Entity {\n  paymentId: string\n  userId: string\n  orderId: string\n  amount: number\n  currency: string\n  status?: string\n}\n\nexport enum PaymentSource {\n  Stripe = 'STRIPE',\n  PayPal = 'PAYPAL',\n}\n\nexport enum PaymentStatus {\n  Successful = 'COMPLETED',\n  Pending = 'PENDING',\n  Failed = 'FAILED',\n  Created = 'CREATED',\n}\n\nexport const StripeToPaymentStatusMap = {\n  canceled: PaymentStatus.Failed,\n  succeeded: PaymentStatus.Successful,\n  processing: PaymentStatus.Pending,\n  requires_action: PaymentStatus.Pending,\n  requires_capture: PaymentStatus.Pending,\n  requires_confirmation: PaymentStatus.Pending,\n  requires_payment_method: PaymentStatus.Pending,\n  unknown: PaymentStatus.Failed,\n}\n\nexport interface Subscription extends Entity {\n  subscriptionId: string\n  userId: string\n  orderId: string\n  amount: number\n  currency: string\n  status?: string\n}\n","import packageJson from '../../package.json'\n\nexport interface Config {\n  baseName: string\n  backendUrl: string\n  defaultTitle: string\n  defaultLineSize: number\n  defaultColor: string\n  thumbnails: {\n    width: number\n    height: number\n  }\n  auth: {\n    domain: string\n    baseUrl: string\n    redirectUrl: string\n    clientId: string\n    audience: string\n    google?: {\n      clientId: string\n    }\n  }\n  admin: {\n    path: string\n    models?: string[]\n  }\n  keys: {\n    stripe?: string\n    paypal?: string\n  }\n}\nconst env = process['env']\nconst defaultBaseName = process.env.NODE_ENV === 'test' ? '/' : packageJson.homepage || '/'\nexport const config: Config = {\n  baseName: env.BASE_NAME || defaultBaseName,\n  backendUrl: env.BACKEND || 'https://api.drawspace.app',\n  defaultTitle: 'Drawspace',\n  defaultColor: 'green',\n  defaultLineSize: 5,\n  thumbnails: {\n    width: 250,\n    height: 250,\n  },\n  auth: {\n    domain: `${env.AUTH_TENANT}.auth0.com`,\n    baseUrl: `https://${env.AUTH_TENANT}.auth0.com`,\n    audience: `https://backend`,\n    clientId: env.AUTH_CLIENT_ID || '',\n    redirectUrl: env.AUTH_REDIRECT_URL || 'https://api.drawspace.app/callback',\n    google: {\n      clientId: env.GOOGLE_CLIENT_ID || '',\n    },\n  },\n  admin: {\n    path: '/admin',\n    models: [],\n  },\n  keys: {\n    stripe: env.STRIPE_KEY || '',\n    paypal: env.PAYPAL_KEY || '',\n  },\n}\n\nexport default config\n","import { Drawing } from '@lib'\nimport { config } from '../../shared/config'\n\nexport function setBrushDefaults(\n  context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n) {\n  context.strokeStyle = config.defaultColor\n  context.lineWidth = config.defaultLineSize\n  context.lineCap = 'round'\n  context.lineJoin = 'round'\n  context.miterLimit = 5\n}\n\nfunction setWH(canvas: HTMLCanvasElement, w: number, h: number) {\n  const context = canvas.getContext('2d')\n  const existing = canvas.getContext('2d')?.getImageData(0, 0, canvas.width, canvas.height)\n  const dpr = window.devicePixelRatio\n  canvas.width = w * dpr\n  canvas.height = h * dpr\n  context?.scale(dpr, dpr)\n  //https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n  canvas.style.width = w + 'px'\n  canvas.style.height = h + 'px'\n  if (existing) {\n    context?.putImageData(existing, 0, 0)\n  }\n}\n\nexport function adjustToResolution(canvas: HTMLCanvasElement, resize?: boolean) {\n  if (!canvas) {\n    return\n  }\n  const min = {\n    w: 375,\n    h: 667,\n  }\n  const iw = window.innerWidth - 20\n  const ih = window.innerHeight - 95\n  const w = iw < min.w ? min.w : iw\n  const h = ih < min.h ? min.h : ih\n  if ((resize && w < canvas.width) || h < canvas.height) {\n    return\n  }\n  setWH(canvas, w, h)\n}\n\nexport function adjustOffscreenResolution(\n  canvas: OffscreenCanvas,\n  width: number,\n  height: number,\n  dpr: number,\n) {\n  if (!canvas) {\n    return\n  }\n  canvas.width = width * dpr\n  canvas.height = height * dpr\n  canvas.getContext('2d')?.scale(dpr, dpr)\n}\n\nexport function createOffscreen(width: number, height: number, dpr: number) {\n  const offline = new OffscreenCanvas(width, height)\n  adjustOffscreenResolution(offline, width, height, dpr)\n  const context = offline.getContext('2d') as OffscreenCanvasRenderingContext2D\n  if (!context) {\n    return\n  }\n\n  setBrushDefaults(context)\n\n  return context\n}\n\nexport async function generateThumbnail(\n  canvas: HTMLCanvasElement,\n  width = config.thumbnails.width,\n  height = config.thumbnails.height,\n): Promise<string> {\n  const data = canvas.toDataURL()\n  const img = new Image(canvas.width, canvas.height)\n  img.src = data\n  img.height = height\n  img.width = width\n\n  const srcAsync = (): Promise<string> =>\n    new Promise(resolve => {\n      img.onload = () => {\n        const off = document.createElement('canvas')\n        off.width = width\n        off.height = height\n        const context = off.getContext('2d') as CanvasRenderingContext2D\n        context.drawImage(img, 0, 0, width, height)\n        const result = context.canvas.toDataURL()\n        resolve(result)\n      }\n    })\n\n  const result = await srcAsync()\n  return result\n}\n\nexport function getDraft() {\n  let draft: Drawing = {\n    drawingId: 'draft',\n    name: 'New Draft',\n    history: [],\n  }\n  const persisted = localStorage.getItem('canvas')\n  if (persisted?.includes('{')) {\n    draft = JSON.parse(persisted) as Drawing\n  }\n  return draft\n}\n\nexport function getCopy(original: Drawing) {\n  const active = { ...original, id: 'copy', name: 'Copy' }\n  active.createdAt = new Date()\n  active.updatedAt = active.createdAt\n  const ts = active.createdAt.getTime()\n  active.history.forEach(h => {\n    h.ts = ts\n  })\n  return active\n}\n\nexport function isEmptyCanvas(canvas: HTMLCanvasElement) {\n  const blank = document.createElement('canvas')\n  blank.width = canvas.width\n  blank.height = canvas.height\n  return canvas.toDataURL() === blank.toDataURL()\n}\n","import { ActionType, DrawAction } from '@lib'\nimport { createOffscreen } from './helpers'\n\nexport type WorkMessage = {\n  buffer: DrawAction[]\n  width: number\n  height: number\n  dpr: number\n  stopAt?: number\n  stream?: boolean\n}\n\nconst w = self as Window & typeof globalThis\n\nfunction send(background: OffscreenCanvasRenderingContext2D, width: number, height: number) {\n  try {\n    const data = background.getImageData(0, 0, width, height)\n    // eslint-disable-next-line\n    w?.postMessage(data)\n  } catch (err: unknown) {\n    // eslint-disable-next-line no-console\n    console.error(err)\n  }\n}\n\nfunction processHistory({ buffer, width, height, dpr, stream, stopAt }: WorkMessage) {\n  const background = createOffscreen(width, height, dpr)\n  if (!background) {\n    return\n  }\n\n  let i = 0\n  for (const { t, x, y, c, w } of buffer) {\n    if (c) {\n      background.strokeStyle = c\n    }\n    if (w) {\n      background.lineWidth = w\n    }\n    if (t === ActionType.Open) {\n      background.beginPath()\n    }\n    if ([ActionType.Open, ActionType.Stroke].includes(t)) {\n      background.lineTo(x as number, y as number)\n      background.stroke()\n    }\n    if (t === ActionType.Close) {\n      background.closePath()\n      if (stream) {\n        send(background, width, height)\n      }\n    }\n    if (stopAt === i) {\n      return\n    }\n    i += 1\n  }\n  send(background, width, height)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nw.onmessage = ({ data }: { data: WorkMessage; ev?: MessageEvent<any> }) => {\n  processHistory(data)\n}\n\nexport {}\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","ActionType","OrderStatus","PaymentSource","PaymentStatus","Failed","Successful","Pending","env","process","defaultBaseName","packageJson","config","baseName","BASE_NAME","backendUrl","BACKEND","defaultTitle","defaultColor","defaultLineSize","thumbnails","width","height","auth","domain","AUTH_TENANT","baseUrl","audience","clientId","AUTH_CLIENT_ID","redirectUrl","AUTH_REDIRECT_URL","google","GOOGLE_CLIENT_ID","admin","path","models","keys","stripe","STRIPE_KEY","paypal","PAYPAL_KEY","createOffscreen","dpr","offline","OffscreenCanvas","canvas","getContext","scale","adjustOffscreenResolution","context","strokeStyle","lineWidth","lineCap","lineJoin","miterLimit","setBrushDefaults","w","self","send","background","data","getImageData","postMessage","console","error","onmessage","buffer","stream","stopAt","t","x","y","c","Open","beginPath","Stroke","includes","lineTo","stroke","Close","closePath","processHistory"],"sourceRoot":""}