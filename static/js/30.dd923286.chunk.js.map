{"version":3,"file":"static/js/30.dd923286.chunk.js","mappings":"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","sources":["features/canvas/thunks.ts","features/canvas/LoadingCanvas.tsx","../../lib/src/types/drawing.ts","../../lib/src/types/order.ts","features/canvas/Items.tsx","../../lib/src/types/setting.ts","features/canvas/Canvas.tsx","features/canvas/NameEdit.tsx","features/canvas/Details.tsx","features/canvas/Color.tsx","features/canvas/LineSize.tsx","features/canvas/Toolbar.tsx","features/canvas/index.tsx"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { Drawing, PagedResult } from '@shared/lib'\nimport { RootState } from '../../shared/store'\nimport { notify, notifyError } from '../app'\nimport { get, Method, request } from '../app/thunks'\nimport { getCopy, getDraft } from './helpers'\nimport { actions } from './slice'\n\nexport const itemsAsync = createAsyncThunk('canvas/list', async (_, { dispatch }) => {\n  const resp = await get<PagedResult<Drawing>>(`/drawing`)\n  if (resp.status === 200) {\n    dispatch(actions.patch({ items: resp.data.items, loaded: true }))\n  }\n  return resp.data\n})\n\nexport const getAsync = createAsyncThunk(\n  'canvas/get',\n  async (id: string, { dispatch, getState }) => {\n    let active: Drawing | undefined\n    const state = getState() as RootState\n    const userId = state.app.user?.userId\n    active = state.canvas.items.find(i => i.drawingId === id)\n    if (!active) {\n      const resp = await get<Drawing>(`/drawing/${id}`)\n      if (resp.status === 404) {\n        dispatch(notifyError(`Drawing ${id} not found`))\n      }\n      const item = resp.data || getDraft()\n      const own = item.userId === userId\n      active = own ? item : getCopy(item)\n    }\n    dispatch(actions.patchActive(active as Drawing))\n    return active\n  },\n)\n\nexport const saveAsync = createAsyncThunk(\n  'canvas/save',\n  async ({ history, thumbnail }: Partial<Drawing>, { dispatch, getState }) => {\n    const state = getState() as RootState\n    const payload = {\n      ...state.canvas.active,\n      history,\n      thumbnail,\n    }\n\n    if (['draft', 'copy'].includes(payload.drawingId as string)) {\n      payload.drawingId = undefined\n    }\n\n    const response = await request<Drawing>('/drawing', payload)\n    if (response.status === 200) {\n      dispatch(actions.onSave(response.data))\n      dispatch(notify('Saved, scroll down to see'))\n    }\n    return response.data\n  },\n)\n\nexport const deleteAsync = createAsyncThunk(\n  'canvas/delete',\n  async (id: string, { dispatch, getState }) => {\n    const response = await request(`/drawing/${id}`, null, Method.DELETE)\n    if (response.status !== 200) {\n      return\n    }\n    const state = (getState() as RootState).canvas.items\n    const items = state.filter(item => item.drawingId !== id)\n    const active = items.find(item => item.drawingId === id) || getDraft()\n    dispatch(actions.patch({ items, active }))\n  },\n)\n","import CircularProgress from '@mui/material/CircularProgress'\nimport { useAppSelector } from '../../shared/store'\n\nexport default function LoadingCanvas() {\n  const loading = useAppSelector(store => store.canvas.loading)\n  return (\n    <>\n      <CircularProgress\n        className={`${loading ? '' : 'invisible'}`}\n        sx={{ position: 'absolute', left: '50%', top: '50%' }}\n      />\n    </>\n  )\n}\n","import { Entity } from '.'\nimport { User } from './user'\n\nexport enum ActionType {\n  Open = 0,\n  Close = 1,\n  Stroke = 2,\n}\n\n/**\n * Reducing space as much as possible\n *\n * c: color\n * w: width/size\n * ts: unix timestamp\n */\n// better space would be, mini serializer needed\n// JSON.stringify([...Object.values({ x, y, t, w, st, ts })])\nexport interface DrawAction {\n  t: ActionType\n  x?: number\n  y?: number\n  c?: string\n  w?: number\n  ts?: number\n}\n\nexport interface Drawing extends Entity {\n  drawingId?: string\n  userId?: string\n  name: string\n  history: DrawAction[]\n  thumbnail?: string\n  private?: boolean\n  sell?: boolean\n  price?: number\n  hits?: number\n  user?: User\n}\n\n// might be better to add up all open closes hmm\nexport function getTimeSpent(d: Drawing): number {\n  if (!d?.history || d.history?.length < 2) {\n    return 0\n  }\n  const first = d.history[0].ts as number\n  const last = d.history[d.history.length - 1].ts as number\n  const millisecs = last - first\n  return millisecs\n}\n\nexport function getDuration(d: Drawing) {\n  const secs = Math.round(getTimeSpent(d) / 1000)\n  const mins = Math.round(secs / 60)\n  const hours = Math.round(mins / 60)\n  const rem = secs % 60\n  return `${hours}h:${mins}m:${rem}s`\n}\n","import { Entity } from '.'\nimport { User } from './user'\nimport { Drawing } from './drawing'\n\nexport enum OrderStatus {\n  Pending = 'pending',\n  Paid = 'paid',\n  Shipped = 'shipped',\n  Delivered = 'delivered',\n  Cancelled = 'cancelled',\n}\n\nexport interface OrderItem extends Entity {\n  orderItemId?: string\n  orderId?: string\n  drawingId?: string\n  price?: number\n  quantity?: number\n  drawing?: Drawing\n}\n\nexport interface Order extends Entity {\n  orderId?: string\n  userId?: string\n  billingAddressId?: string\n  shippingAddressId?: string\n  paymentMethodId?: string\n  total?: number\n  status?: OrderStatus\n  OrderItems?: OrderItem[]\n  user?: User\n}\n\nexport interface Payment extends Entity {\n  paymentId: string\n  userId: string\n  orderId: string\n  amount: number\n  currency: string\n  status?: string\n}\n\nexport enum PaymentSource {\n  Stripe = 'STRIPE',\n  PayPal = 'PAYPAL',\n}\n\nexport enum PaymentStatus {\n  Successful = 'COMPLETED',\n  Pending = 'PENDING',\n  Failed = 'FAILED',\n  Created = 'CREATED',\n}\n\nexport const StripeToPaymentStatusMap = {\n  canceled: PaymentStatus.Failed,\n  succeeded: PaymentStatus.Successful,\n  processing: PaymentStatus.Pending,\n  requires_action: PaymentStatus.Pending,\n  requires_capture: PaymentStatus.Pending,\n  requires_confirmation: PaymentStatus.Pending,\n  requires_payment_method: PaymentStatus.Pending,\n  unknown: PaymentStatus.Failed,\n}\n\nexport interface Subscription extends Entity {\n  subscriptionId: string\n  userId: string\n  orderId: string\n  amount: number\n  currency: string\n  status?: string\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Delete, Edit, Settings as SettingsIcon } from '@mui/icons-material'\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Container,\n  ContainerProps,\n  Grid,\n  IconButton,\n  ImageList,\n  Paper,\n  Typography,\n} from '@mui/material'\nimport { Drawing } from '@shared/lib'\nimport React from 'react'\nimport { useCallback } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Paths } from 'src/shared/routes'\nimport { config } from '../../shared/config'\nimport { useAppDispatch, useAppSelector } from '../../shared/store'\nimport { actions } from './slice'\nimport { deleteAsync, itemsAsync } from './thunks'\n\nexport default function Items(props: ContainerProps) {\n  const token = useAppSelector(state => state.app.token)\n  const items = useAppSelector(store => store.canvas.items)\n  const loaded = useAppSelector(store => store.canvas.loaded)\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n  const { id } = useParams()\n  const activeId = useAppSelector(store => store.canvas.active?.drawingId)\n  const isActive = (item: Drawing) => activeId === item?.drawingId\n\n  const setItem = (item: Drawing) => {\n    dispatch(actions.patchActive(item))\n    navigate(`${Paths.Draw}/${item?.drawingId}`, { replace: true })\n  }\n\n  const deleteItem = async (item: Drawing) => {\n    const result = await dispatch(deleteAsync(item.drawingId as string))\n    if (result.meta.requestStatus === 'fulfilled') {\n      if (id === item.drawingId) {\n        navigate(Paths.Draw, { replace: true })\n      }\n    }\n  }\n\n  const showDetails = (item: Drawing) => {\n    setItem(item)\n    dispatch(actions.patch({ showDetails: true }))\n  }\n\n  React.useEffect(() => {\n    if (!loaded && token) {\n      dispatch(itemsAsync())\n    }\n  }, [dispatch, loaded, token])\n\n  if (!items.length) {\n    return null\n  }\n\n  return (\n    <Container maxWidth=\"xl\" {...props}>\n      <ImageList>\n        {items.map(item => (\n          <Paper\n            title={item.name}\n            key={item.drawingId}\n            sx={{\n              backgroundColor: 'primary.main',\n              borderRadius: '16px',\n              transition: 'all 200ms ease-in',\n              marginRight: '0.5rem',\n              display: 'flex',\n              position: 'relative',\n              maxWidth: '47vw',\n            }}\n          >\n            <img\n              src={item.thumbnail}\n              alt={item.name}\n              loading=\"lazy\"\n              style={{\n                height: config.thumbnails.height,\n                width: config.thumbnails.width,\n                borderRadius: '16px',\n              }}\n              width={config.thumbnails.width}\n              height={config.thumbnails.height}\n            />\n            <Paper\n              sx={{\n                opacity: 0.5,\n                height: '40%',\n                bottom: 0,\n                left: 0,\n                right: 0,\n                position: 'absolute',\n                display: 'flex',\n              }}\n            >\n              <Grid\n                container\n                sx={{\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  margin: '0 1rem',\n                }}\n              >\n                <Grid item>\n                  <Typography\n                    sx={\n                      {\n                        // fontFamily: '\"Public Sans\", sans-serif',\n                      }\n                    }\n                  >\n                    {item.name}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <IconButton onClick={() => setItem(item)}>\n                    <Edit />\n                  </IconButton>\n                  <IconButton onClick={() => showDetails(item)}>\n                    <SettingsIcon />\n                  </IconButton>\n                  <IconButton onClick={() => deleteItem(item)}>\n                    <Delete />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Paper>\n        ))}\n      </ImageList>\n    </Container>\n  )\n}\n","export enum SettingType {\n  System = 'system',\n  Provider = 'provider',\n  Plugin = 'plugin',\n}\n\nexport interface Setting {\n  name: string\n  type?: SettingType\n  data?: { [key: string]: unknown }\n  enabled?: boolean\n}\n","import React from 'react'\n\nimport { ActionType } from '@shared/lib'\nimport { adjustToResolution, setBrushDefaults } from './helpers'\nimport { useAppSelector } from '../../shared/store'\nimport { config } from '../../shared/config'\n\nexport function Canvas({\n  canvasRef,\n  contextRef,\n  record,\n}: {\n  canvasRef: React.MutableRefObject<HTMLCanvasElement | null>\n  contextRef: React.MutableRefObject<CanvasRenderingContext2D | null>\n  record: (t: ActionType, x?: number, y?: number) => void\n}) {\n  const color = useAppSelector(state => state.canvas.color)\n  const size = useAppSelector(state => state.canvas.size)\n  const isDrawing = React.useRef<boolean>(false)\n\n  const draw = React.useCallback(\n    (offsetX: number, offsetY: number, hist = false) => {\n      if (!contextRef?.current) {\n        return\n      }\n      contextRef.current.lineTo(offsetX, offsetY)\n      contextRef.current.stroke()\n      if (!hist) {\n        record(ActionType.Stroke, offsetX, offsetY)\n      }\n    },\n    [contextRef, record],\n  )\n\n  const startDrawing = (offsetX: number, offsetY: number) => {\n    if (!contextRef.current || !canvasRef.current) {\n      return\n    }\n    contextRef.current.beginPath()\n    contextRef.current.lineTo(offsetX + 1, offsetY + 1)\n    contextRef.current.stroke()\n    if (color === 'transparent') {\n      contextRef.current.globalCompositeOperation = 'destination-out'\n    } else {\n      contextRef.current.globalCompositeOperation = 'source-over'\n      contextRef.current.strokeStyle = color || config.defaultColor\n    }\n    contextRef.current.lineWidth = size || config.defaultLineSize\n    isDrawing.current = true\n    canvasRef.current.style.cursor = 'crosshair'\n    record(ActionType.Open, offsetX + 1, offsetY + 1)\n  }\n\n  const finishDrawing = () => {\n    if (!contextRef.current || !canvasRef.current) {\n      return\n    }\n    contextRef.current.closePath()\n    isDrawing.current = false\n    canvasRef.current.style.cursor = 'default'\n    record(ActionType.Close)\n    if (!contextRef.current) {\n      return\n    }\n  }\n\n  //Events\n  const onMouseStart = ({ nativeEvent }: React.MouseEvent) => {\n    const { offsetX, offsetY } = nativeEvent\n    startDrawing(offsetX, offsetY)\n  }\n\n  const onMouseMove = ({ nativeEvent }: { nativeEvent: MouseEvent }) => {\n    if (!isDrawing.current || !contextRef?.current) {\n      return\n    }\n    const { offsetX, offsetY } = nativeEvent\n    draw(offsetX, offsetY)\n  }\n\n  const touchStart = (e: React.TouchEvent) => {\n    if (e.touches?.length > 1) return\n    const offsetX = e.touches[0].clientX\n    const offsetY = e.touches[0].clientY\n    startDrawing(offsetX, offsetY)\n  }\n\n  const touchMove = (e: React.TouchEvent) => {\n    if (e.touches?.length > 1) return\n    const offsetX = e.touches[0].clientX\n    const offsetY = e.touches[0].clientY\n    draw(offsetX, offsetY)\n  }\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current\n    const context = canvas?.getContext('2d')\n    if (!canvas || !context) {\n      return\n    }\n    contextRef.current = context\n\n    adjustToResolution(canvas)\n    setBrushDefaults(context)\n\n    const handleResizing = () => {\n      adjustToResolution(canvas, true)\n    }\n    window.addEventListener('resize', handleResizing)\n    return () => window.removeEventListener('resize', () => handleResizing)\n  }, [canvasRef, contextRef])\n\n  return (\n    <canvas\n      style={{ flex: 1, touchAction: 'pinch-zoom' }}\n      onTouchStart={touchStart}\n      onTouchMove={touchMove}\n      onTouchEnd={finishDrawing}\n      onMouseDown={onMouseStart}\n      onMouseUp={finishDrawing}\n      onMouseMove={onMouseMove}\n      ref={canvasRef}\n    />\n  )\n}\n","import React from 'react'\nimport { styled, TextField } from '@mui/material'\nimport { useAppDispatch, useAppSelector } from '../../shared/store'\nimport { actions } from './slice'\n\nconst FieldStyled = styled(TextField)({\n  position: 'absolute',\n  top: '10%',\n  left: '20%',\n})\n\nexport default function NameEdit({\n  inputRef,\n  save,\n}: {\n  inputRef: React.RefObject<HTMLInputElement>\n  save: () => void\n}) {\n  const active = useAppSelector(state => state.canvas?.active)\n  const dispatch = useAppDispatch()\n  const onNameChange = React.useCallback(\n    (e: { target: { value: string } }) => {\n      dispatch(actions.patchActive({ name: e.target.value }))\n    },\n    [dispatch],\n  )\n  const onKeyUp = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      save()\n    }\n  }\n  return (\n    <FieldStyled\n      variant=\"standard\"\n      autoFocus={active.drawingId === 'draft'}\n      accessKey=\"N\"\n      inputRef={inputRef}\n      value={active?.name || ''}\n      onChange={onNameChange}\n      key={`${active.drawingId}-${active.createdAt}`}\n      onKeyUp={onKeyUp}\n    />\n  )\n}\n","import { AttachMoney, MonetizationOn, VisibilityOff } from '@mui/icons-material'\nimport {\n  Box,\n  Dialog,\n  FormControlLabel,\n  FormGroup,\n  InputAdornment,\n  Switch,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport Moment from 'react-moment'\nimport { useAppDispatch, useAppSelector } from 'src/shared/store'\nimport { Drawing } from '../../../../lib/src/types'\nimport { Method, notify, request } from '../app'\nimport { actions } from './slice'\n\nexport function Details() {\n  const dispatch = useAppDispatch()\n  const show = useAppSelector(state => state.canvas.showDetails)\n  const item = useAppSelector(state => state.canvas.active)\n  const close = () => dispatch(actions.patch({ showDetails: false }))\n  const update = async (id?: string, field?: string, value?: unknown) => {\n    const response = await request<Drawing>('/drawing', { id, field, value }, Method.PATCH)\n    dispatch(actions.onSave(response.data))\n    dispatch(notify(response.status === 200 ? 'Properties updated' : 'Error updating properties'))\n  }\n\n  return (\n    <Dialog open={!!show} onClose={close}>\n      <Box\n        sx={{\n          m: '1rem 2rem 3rem 2rem',\n        }}\n      >\n        <Typography variant=\"h5\" component=\"h1\" sx={{ textAlign: 'center', mb: '1rem' }}>\n          {item?.name}\n        </Typography>\n        <FormGroup>\n          <TextField\n            label=\"Price\"\n            placeholder=\"0.00\"\n            type=\"number\"\n            variant=\"filled\"\n            sx={{ my: 2 }}\n            value={item?.price || 0}\n            onChange={e => update(item.drawingId, 'price', Number(e.target.value))}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <MonetizationOn />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                onChange={e => update(item.drawingId, 'sell', e.target.checked)}\n                checked={!!item?.sell}\n                checkedIcon={<AttachMoney />}\n              />\n            }\n            label=\"Monetize\"\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                name=\"private\"\n                onChange={e => update(item.drawingId, 'private', e.target.checked)}\n                checked={!!item?.private}\n                checkedIcon={<VisibilityOff />}\n              />\n            }\n            label=\"Don't show in gallery\"\n          />\n\n          <Typography\n            sx={{\n              color: 'text.secondary',\n              marginTop: '1rem',\n              lineHeight: 1.5,\n              fontWeight: 400,\n              fontSize: '0.75rem',\n              textAlign: 'right',\n            }}\n          >\n            Modified:&nbsp;\n            <Moment fromNow>{item.updatedAt}</Moment>\n          </Typography>\n        </FormGroup>\n      </Box>\n    </Dialog>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport { Backspace, Check } from '@mui/icons-material'\nimport { Box, BoxProps, Fab, Stack } from '@mui/material'\nimport { useAppDispatch, useAppSelector } from '../../shared/store'\nimport { actions } from './slice'\n\nconst colors = ['yellow', 'red', 'blue', 'green', 'black']\n\nexport default function Color(props: BoxProps) {\n  const dispatch = useAppDispatch()\n  const activeColor = useAppSelector(state => state.canvas.color)\n  const [prev, setPrev] = React.useState<string | undefined>()\n  const isActive = (c: string) => activeColor === c\n  const setColor = (requested: string) => {\n    const color = requested === 'transparent' && activeColor === 'transparent' ? prev : requested\n    dispatch(actions.patch({ color }))\n    setPrev(activeColor)\n  }\n\n  return (\n    <Box {...props}>\n      <Stack spacing={1}>\n        {colors.map(c => (\n          <Fab\n            key={c}\n            sx={{\n              backgroundColor: c,\n            }}\n            onClick={() => setColor(c)}\n          >\n            {isActive(c) && <Check />}\n          </Fab>\n        ))}\n\n        <Fab title=\"eraser\" onClick={() => setColor('transparent')}>\n          <Backspace\n            sx={{\n              transform: isActive('transparent') ? 'rotate(-45deg)' : 'rotate(-90deg)',\n              transition: 'all 200ms ease-in',\n            }}\n          />\n        </Fab>\n      </Stack>\n    </Box>\n  )\n}\n","import { Container, Slider, styled } from '@mui/material'\nimport { config } from '../../shared/config'\nimport { useAppDispatch, useAppSelector } from 'src/shared/store'\nimport { actions } from './slice'\n\nconst ContainerStyled = styled(Container)({\n  position: 'absolute',\n  bottom: '3%',\n  left: '20%',\n  width: '70%',\n})\n\nexport default function LineSize() {\n  const activeSize = useAppSelector(state => state.canvas.size)\n  const dispatch = useAppDispatch()\n  const onSize = (e: Event, v: number | number[]) => dispatch(actions.patch({ size: v as number }))\n  return (\n    <ContainerStyled>\n      <Slider\n        value={activeSize || config.defaultLineSize}\n        onChange={onSize}\n        min={1}\n        max={100}\n        valueLabelDisplay=\"auto\"\n        title=\"Line size\"\n      />\n    </ContainerStyled>\n  )\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { MonetizationOn, AttachMoney, Settings } from '@mui/icons-material'\nimport { Stack, Fab, Box } from '@mui/material'\nimport { useAppDispatch } from 'src/shared/store'\nimport Color from './Color'\nimport LineSize from './LineSize'\nimport { actions } from './slice'\n\nexport function Toolbar({\n  newHandler,\n  clearHandler,\n  saveHandler,\n}: {\n  newHandler: () => void\n  clearHandler: () => void\n  saveHandler: () => void\n}) {\n  const dispatch = useAppDispatch()\n  const showDetails = () => dispatch(actions.patch({ showDetails: true }))\n  return (\n    <>\n      <Box sx={{ position: 'absolute', top: '12%', right: '3%' }}>\n        <Fab sx={{ mb: 2 }} onClick={showDetails}>\n          <Settings color=\"primary\" fontSize=\"large\" />\n        </Fab>\n        <Color />\n        <Stack spacing={1} mt=\"1rem\">\n          <Fab color=\"secondary\" onClick={newHandler}>\n            New\n          </Fab>\n          <Fab color=\"secondary\" onClick={clearHandler}>\n            Clear\n          </Fab>\n          <Fab color=\"secondary\" onClick={saveHandler}>\n            Save\n          </Fab>\n        </Stack>\n      </Box>\n      <LineSize />\n    </>\n  )\n}\n\nexport default Toolbar\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useRef, startTransition } from 'react'\nimport { DrawAction, ActionType, Drawing } from '@shared/lib'\nimport { useAppDispatch, useAppSelector } from '../../shared/store'\nimport { getAsync, saveAsync } from './thunks'\nimport { Box, Container, Fab } from '@mui/material'\nimport LoadingCanvas from './LoadingCanvas'\nimport { actions } from './slice'\nimport { patch as patchApp } from '../app'\nimport Items from './Items'\nimport { generateThumbnail, getDraft } from './helpers'\nimport { Canvas } from './Canvas'\nimport NameEdit from './NameEdit'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Paths } from 'src/shared/routes'\nimport { Details } from './Details'\nimport Toolbar from './Toolbar'\nimport { Settings } from '@mui/icons-material'\n\nexport function CanvasContainer() {\n  const dispatch = useAppDispatch()\n  const authenticated = useAppSelector(state => state.app.token)\n  const history = useAppSelector(state => state.canvas?.active?.history)\n  const id = useAppSelector(state => state.canvas?.active?.drawingId)\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n  const contextRef = useRef<CanvasRenderingContext2D | null>(null)\n  const buffer = useRef<DrawAction[]>([])\n  const bufferId = useRef<string | null>(null)\n  const nameRef = useRef<HTMLInputElement | null>(null)\n  const workerRef = useRef<Worker | null>(null)\n  const { id: paramId } = useParams()\n  const navigate = useNavigate()\n\n  const record = React.useCallback((t: ActionType, x?: number, y?: number) => {\n    const w = contextRef.current?.lineWidth\n    const c = contextRef.current?.strokeStyle as string\n    const ts = new Date().getTime()\n    buffer.current = [...buffer.current, { x, y, t, w, c, ts }]\n  }, [])\n\n  const clearCanvas = React.useCallback(() => {\n    const canvas = canvasRef.current\n    const context = canvas?.getContext('2d')\n    if (!canvas || !context) {\n      return\n    }\n    context.clearRect(0, 0, canvas.width, canvas.height)\n    buffer.current = []\n    bufferId.current = null\n    navigate(`${Paths.Draw}`, { replace: true })\n  }, [navigate])\n\n  const newHandler = React.useCallback(() => {\n    clearCanvas()\n    const active = getDraft()\n    dispatch(actions.patch({ active }))\n  }, [clearCanvas, dispatch])\n\n  const saveHandler = React.useCallback(async () => {\n    const canvas = canvasRef.current\n    const context = canvas?.getContext('2d')\n    if (!canvas || !context) {\n      return\n    }\n\n    if (!authenticated) {\n      dispatch(patchApp({ dialog: 'onboard' }))\n      return\n    }\n\n    const payload = {\n      history: buffer.current,\n      thumbnail: await generateThumbnail(canvas),\n    }\n    await dispatch(saveAsync(payload))\n  }, [authenticated, dispatch])\n\n  const renderHistory = React.useCallback(() => {\n    if (!canvasRef.current || !contextRef.current) {\n      return\n    }\n\n    //Lazy worker\n    if (!workerRef.current) {\n      const worker = new Worker(new URL('./worker.ts', import.meta.url))\n      worker.onmessage = e => {\n        if (!contextRef.current) {\n          // eslint-disable-next-line no-console\n          console.error('no context for result')\n        }\n        contextRef.current?.putImageData(e.data, 0, 0)\n        dispatch(actions.patch({ loading: false }))\n      }\n      workerRef.current = worker\n    }\n\n    //Worker rendering\n    dispatch(actions.patch({ loading: true }))\n\n    //Resizing, retina support\n    const { width, height } = canvasRef.current.getBoundingClientRect()\n    workerRef.current.postMessage({\n      buffer: buffer.current,\n      width,\n      height,\n      dpr: window.devicePixelRatio,\n    })\n  }, [dispatch])\n\n  /**\n   * onItemChanged\n   */\n  React.useEffect(() => {\n    if (id === 'draft') {\n      clearCanvas()\n      return\n    }\n\n    if (bufferId.current !== id) {\n      const savedDraft = bufferId.current === 'draft' && !!id && id !== 'draft'\n      bufferId.current = id as string\n      if (savedDraft) {\n        return\n      }\n      buffer.current = history\n    } else {\n      return\n    }\n\n    startTransition(() => {\n      renderHistory()\n    })\n  }, [id, history, renderHistory, clearCanvas])\n\n  React.useEffect(() => {\n    async function run() {\n      if (paramId && id !== paramId) {\n        const res = await dispatch(getAsync(paramId))\n        if ((res?.payload as Drawing)?.drawingId === 'copy') {\n          navigate(`${Paths.Draw}`, { replace: true })\n        }\n      }\n    }\n    run()\n  }, [dispatch, id, navigate, paramId])\n\n  return (\n    <Container maxWidth={false} disableGutters sx={{ display: 'flex', flexFlow: 'column' }}>\n      <Canvas canvasRef={canvasRef} contextRef={contextRef} record={record} />\n      <NameEdit inputRef={nameRef} save={saveHandler} />\n      <Toolbar newHandler={newHandler} saveHandler={saveHandler} clearHandler={clearCanvas} />\n      <LoadingCanvas />\n      <Items sx={{ mb: '1rem' }} />\n      <Details />\n    </Container>\n  )\n}\n\nexport default CanvasContainer\n"],"names":["itemsAsync","createAsyncThunk","_","dispatch","get","resp","status","actions","items","data","loaded","getAsync","id","getState","state","userId","app","user","active","canvas","find","i","drawingId","notifyError","item","getDraft","own","getCopy","saveAsync","history","thumbnail","payload","includes","undefined","request","response","notify","deleteAsync","Method","filter","LoadingCanvas","loading","useAppSelector","store","CircularProgress","className","sx","position","left","top","ActionType","OrderStatus","PaymentSource","PaymentStatus","Items","props","token","useAppDispatch","navigate","useNavigate","useParams","setItem","Paths","replace","deleteItem","meta","requestStatus","React","length","Container","maxWidth","ImageList","map","Paper","title","name","backgroundColor","borderRadius","transition","marginRight","display","src","alt","style","height","config","width","opacity","bottom","right","Grid","container","justifyContent","alignItems","margin","Typography","IconButton","onClick","Edit","showDetails","Settings","Delete","SettingType","Failed","Successful","Pending","Canvas","canvasRef","contextRef","record","color","size","isDrawing","draw","offsetX","offsetY","hist","current","lineTo","stroke","Stroke","startDrawing","beginPath","globalCompositeOperation","strokeStyle","lineWidth","cursor","Open","finishDrawing","closePath","Close","context","getContext","adjustToResolution","setBrushDefaults","handleResizing","window","addEventListener","removeEventListener","flex","touchAction","onTouchStart","e","touches","clientX","clientY","onTouchMove","onTouchEnd","onMouseDown","nativeEvent","onMouseUp","onMouseMove","ref","FieldStyled","styled","TextField","NameEdit","inputRef","save","onNameChange","target","value","variant","autoFocus","accessKey","onChange","onKeyUp","key","createdAt","Details","show","update","field","Dialog","open","onClose","Box","m","component","textAlign","mb","FormGroup","label","placeholder","type","my","price","Number","InputProps","startAdornment","InputAdornment","MonetizationOn","FormControlLabel","control","Switch","checked","sell","checkedIcon","AttachMoney","private","VisibilityOff","marginTop","lineHeight","fontWeight","fontSize","fromNow","updatedAt","colors","Color","activeColor","prev","setPrev","isActive","c","setColor","requested","Stack","spacing","Fab","Check","Backspace","transform","ContainerStyled","LineSize","activeSize","Slider","v","min","max","valueLabelDisplay","newHandler","clearHandler","saveHandler","mt","CanvasContainer","authenticated","useRef","buffer","bufferId","nameRef","workerRef","paramId","t","x","y","w","ts","Date","getTime","clearCanvas","clearRect","patchApp","dialog","generateThumbnail","renderHistory","worker","Worker","URL","onmessage","console","error","putImageData","getBoundingClientRect","postMessage","dpr","devicePixelRatio","savedDraft","startTransition","res","run","disableGutters","flexFlow"],"sourceRoot":""}